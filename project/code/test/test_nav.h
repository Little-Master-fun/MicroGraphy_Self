/*********************************************************************************************************************
* 文件名称          test_nav.h
* 功能说明          导航系统测试程序头文件
* 作者              LittleMaster
* 版本信息          v1.0
* 修改记录
* 日期              作者                版本
* 2025-09-19        LittleMaster       1.0v
* 
* 文件作用说明：
* 本文件为导航系统测试程序的头文件，定义了导航测试相关的函数接口
* 
* 测试内容：
* 1. 正方形路径生成测试（1×1m标准正方形）
* 2. 路径Flash存储/读取测试
* 3. Pure Pursuit导航算法测试
* 4. 按键控制导航启动/停止测试
* 5. 实时导航状态显示测试
* 
* 使用方式：
* 1. 在主函数中调用test_nav_complete()开始完整导航测试
* 2. 或调用单独的测试函数进行模块测试
* 
* 按键功能：
* KEY_1: 生成并保存正方形路径
* KEY_2: 开始/暂停导航
* KEY_3: 停止导航并返回
* KEY_4: 紧急停车
* 
* 注意事项：
* 1. 确保导航系统已正确初始化
* 2. 确保传感器（编码器+IMU）连接正常
* 3. 在开阔平坦区域进行测试
* 4. 观察屏幕显示确认导航状态
********************************************************************************************************************/

#ifndef _TEST_NAV_H_
#define _TEST_NAV_H_

#include "nav_control.h"
#include "zf_device_key.h"
#include "zf_device_ips114.h"
#include "zf_common_headfile.h"
#include <stdio.h>
#include <math.h>

//=================================================测试参数定义================================================
// 测试路径参数
#define TEST_SQUARE_SIZE            1.0f        // 正方形边长 m
#define TEST_SQUARE_SPEED           1.5f        // 测试速度 m/s
#define TEST_WAYPOINT_TOLERANCE     0.15f       // 路径点容差 m
#define TEST_CORNER_SPEED           1.0f        // 转角处速度 m/s

// 显示更新参数  
#define TEST_DISPLAY_UPDATE_MS      100         // 显示更新周期 ms
#define TEST_STATUS_CHECK_MS        50          // 状态检查周期 ms
#define TEST_MAX_DISPLAY_LINES      8           // 最大显示行数

// 测试状态定义
typedef enum {
    TEST_NAV_IDLE           = 0,    // 空闲状态
    TEST_NAV_PATH_READY     = 1,    // 路径已准备
    TEST_NAV_NAVIGATING     = 2,    // 导航中
    TEST_NAV_PAUSED         = 3,    // 暂停
    TEST_NAV_COMPLETED      = 4,    // 完成
    TEST_NAV_ERROR          = 5     // 错误
} test_nav_status_enum;

// 测试统计信息
typedef struct {
    uint32 test_start_time_ms;      // 测试开始时间
    uint32 total_test_time_ms;      // 总测试时间
    float max_cross_track_error;    // 最大横向误差
    float avg_cross_track_error;    // 平均横向误差
    float total_distance;           // 总行驶距离
    uint16 loops_completed;         // 完成的循环次数
} test_nav_stats_t;

//=================================================函数声明================================================

//-------------------------------------------------------------------------------------------------------------------
// 函数简介     完整导航系统测试
// 参数说明     void
// 返回参数     void
// 使用示例     test_nav_complete();
// 备注信息     主测试函数，包含路径生成、导航执行、状态显示等全部功能
//-------------------------------------------------------------------------------------------------------------------
void test_nav_complete(void);

//-------------------------------------------------------------------------------------------------------------------
// 函数简介     生成1×1m正方形测试路径
// 参数说明     void
// 返回参数     uint8               路径生成结果 (1=成功, 0=失败)
// 使用示例     test_nav_create_square_path();
// 备注信息     生成标准正方形路径并保存到导航系统
//-------------------------------------------------------------------------------------------------------------------
uint8 test_nav_create_square_path(void);

//-------------------------------------------------------------------------------------------------------------------
// 函数简介     导航状态实时显示
// 参数说明     void
// 返回参数     void
// 使用示例     test_nav_display_status(); // 在主循环中调用
// 备注信息     在屏幕上显示当前导航状态、位置、速度等关键信息
//-------------------------------------------------------------------------------------------------------------------
void test_nav_display_status(void);

//-------------------------------------------------------------------------------------------------------------------
// 函数简介     按键控制处理
// 参数说明     void
// 返回参数     uint8               按键处理结果 (1=有按键动作, 0=无动作)
// 使用示例     test_nav_handle_keys();
// 备注信息     处理按键输入，控制导航启动、暂停、停止等操作
//-------------------------------------------------------------------------------------------------------------------
uint8 test_nav_handle_keys(void);

//-------------------------------------------------------------------------------------------------------------------
// 函数简介     导航路径验证测试
// 参数说明     void
// 返回参数     uint8               验证结果 (1=通过, 0=失败)
// 使用示例     test_nav_verify_path();
// 备注信息     验证生成的路径数据正确性
//-------------------------------------------------------------------------------------------------------------------
uint8 test_nav_verify_path(void);

//-------------------------------------------------------------------------------------------------------------------
// 函数简介     导航性能统计
// 参数说明     stats               统计信息输出指针
// 返回参数     uint8               获取结果 (1=成功, 0=失败)
// 使用示例     test_nav_get_statistics(&stats);
// 备注信息     获取导航测试的性能统计数据
//-------------------------------------------------------------------------------------------------------------------
uint8 test_nav_get_statistics(test_nav_stats_t *stats);

//-------------------------------------------------------------------------------------------------------------------
// 函数简介     紧急停车测试
// 参数说明     void
// 返回参数     void
// 使用示例     test_nav_emergency_stop();
// 备注信息     测试紧急停车功能
//-------------------------------------------------------------------------------------------------------------------
void test_nav_emergency_stop(void);

//-------------------------------------------------------------------------------------------------------------------
// 函数简介     导航系统复位
// 参数说明     void
// 返回参数     void
// 使用示例     test_nav_reset();
// 备注信息     重置导航测试状态，准备下一次测试
//-------------------------------------------------------------------------------------------------------------------
void test_nav_reset(void);

//-------------------------------------------------------------------------------------------------------------------
// 函数简介     简化的自动化导航测试
// 参数说明     void
// 返回参数     void
// 使用示例     test_nav_simple_auto();
// 备注信息     自动化导航测试，不需要按键交互，直接进行导航测试
//-------------------------------------------------------------------------------------------------------------------
void test_nav_simple_auto(void);

//-------------------------------------------------------------------------------------------------------------------
// 函数简介     最小化软件测试 (跳过硬件初始化)
// 参数说明     void
// 返回参数     void
// 使用示例     test_nav_minimal_software();
// 备注信息     纯软件测试，不依赖任何硬件初始化，用于验证路径创建逻辑
//-------------------------------------------------------------------------------------------------------------------
void test_nav_minimal_software(void);

#endif // _TEST_NAV_H_
